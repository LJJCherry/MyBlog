{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/2017-02-21-Linux常用命令.md","hash":"3fc9cf434109331c915a208d418df711345ce578","modified":1540805713289},{"_id":"source/_posts/2017-02-21-Mac定时任务.md","hash":"b2c31919a956a96df24ab7c0a7fa1bda145072d0","modified":1540805713290},{"_id":"source/_posts/2017-02-21-Markdown语法示例.md","hash":"476d0fe64361bf435f7571c9045e1bd86731a9e3","modified":1540805713290},{"_id":"source/_posts/2017-06-09-React生命周期.md","hash":"b4b09fb1c10f7f9da6e82497b62a22bdd0dae95f","modified":1540805713290},{"_id":"source/_posts/gulp的使用.md","hash":"c8a68700a52e67cff058aa7bca444436887ff4ea","modified":1540805713291},{"_id":"source/_posts/全面解析JavaScript中&&和||.md","hash":"9ba95cb6932d6eee8bde2b7711254327b30c3be0","modified":1540805713291},{"_id":"source/tags/index.md","hash":"455b59e6238a5c76e446cc66ab1358dde3c51f33","modified":1540805713291},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731879},{"_id":"public/2018/10/29/gulp的使用/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731879},{"_id":"public/2018/10/29/2017-02-21-Mac定时任务/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731879},{"_id":"public/2018/10/29/2017-02-21-Markdown语法示例/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731879},{"_id":"public/2018/10/29/2017-06-09-React生命周期/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/2018/10/29/2017-02-21-Linux常用命令/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/2017/03/06/全面解析JavaScript中&&和||/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/archives/2017/03/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/archives/2018/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/archives/2018/10/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/tags/Mac/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/tags/Linux/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/tags/React/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731880},{"_id":"public/tags/gulp/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731881},{"_id":"public/tags/JavaScript/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540809731881},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1540805713292},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1540805713292},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1540805713292},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1540805713292},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1540805713293},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1540805713303},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1540805713293},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1540805713293},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1540805713294},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1540805713295},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1540805713294},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1540805713295},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1540805713294},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1540805713301},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1540805713301},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1540805713302},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1540805713302},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1540805713302},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1540805713303},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1540805713303},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1540805713303},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1540805713295},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1540805713296},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1540805713296},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1540805713296},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1540805713296},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1540805713297},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1540805713297},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1540805713297},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1540805713298},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1540805713300},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1540805713300},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1540805713300},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1540805713301},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1540805713301},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1540805713301},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1540805713304},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1540805713309},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1540805713317},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1540805713318},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1540805713318},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1540805713319},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1540805713318},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1540805713319},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1540805713319},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1540805713322},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1540805713322},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1540805713321},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1540805713322},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1540805713298},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1540805713298},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1540805713299},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1540805713299},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1540805713299},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1540805713299},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1540805713304},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1540805713305},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1540805713306},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1540805713306},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1540805713306},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1540805713306},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1540805713307},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1540805713307},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1540805713307},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1540805713308},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1540805713308},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1540805713308},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1540805713311},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1540805713315},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1540805713310},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1540805713320},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1540805713320},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1540805713320},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1540805713321},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1540805713320},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1540805713321},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1540805713315},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1540805713314},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1540805713317},{"_id":"themes/next/.all-contributorsrc","hash":"e32dc4075e304af04b98d0726d489081bea722c0","modified":1540813365648},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1540813365648},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1540813365648},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1540813365648},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1540813365648},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1540813365650},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1540813365650},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1540813365650},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1540813365650},{"_id":"themes/next/README.md","hash":"ee7119baf976616a84d3c9c10fcab567995dc98e","modified":1540813365651},{"_id":"themes/next/_config.yml","hash":"c241f64089a8ae8116236be6fe6b3c5304fe90b3","modified":1540813365651},{"_id":"themes/next/bower.json","hash":"23379fec9b4f70bc2611433ac3770445a8ca18d9","modified":1540813365651},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1540813365652},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1540813365657},{"_id":"themes/next/package.json","hash":"901c9bf4743df8f1806b5bcb5e93b54f6aee0ea3","modified":1540813365694},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1540813365641},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1540813365643},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1540813323313},{"_id":"themes/next/.git/index","hash":"aec7593816f06921c5469c92ab28ad804223c6b6","modified":1540813365798},{"_id":"themes/next/.git/packed-refs","hash":"86905eca4d88a5acea73b0b039f4b1fb68e16b66","modified":1540813365638},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1540813365649},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1540813365649},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1540813365649},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1540813365650},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1540813365650},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1540813365650},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1540813365652},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1540813365652},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1540813365652},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1540813365653},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1540813365653},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1540813365653},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1540813365653},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1540813365653},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1540813365654},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1540813365657},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1540813365658},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1540813365658},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1540813365658},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1540813365658},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1540813365658},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1540813365659},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1540813365659},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1540813365659},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1540813365659},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1540813365660},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1540813365660},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1540813365660},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1540813365661},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1540813365661},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1540813365661},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1540813365662},{"_id":"themes/next/layout/_layout.swig","hash":"85de0662a1b136277a72f8d8b4b1425a006f377e","modified":1540813365663},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1540813365691},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1540813365691},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1540813365692},{"_id":"themes/next/layout/page.swig","hash":"862b361852fb6d7a95bfb6077922410a33cd3126","modified":1540813365692},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1540813365693},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1540813365693},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1540813365694},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1540813365695},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1540813365695},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1540813365696},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1540813365797},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1540813365797},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1540813365797},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365773},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1540813323314},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1540813323313},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1540813323315},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1540813323315},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1540813323314},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1540813323315},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1540813323313},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1540813323314},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1540813323315},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1540813323316},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1540813323312},{"_id":"themes/next/.git/logs/HEAD","hash":"5d3b8afa596da48f73abc237d822281a71b71a99","modified":1540813365642},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1540813365654},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1540813365654},{"_id":"themes/next/docs/ru/README.md","hash":"c54e256ed11a84ee38f755d6f35a3e6e29a91dbc","modified":1540813365654},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1540813365654},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1540813365655},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1540813365655},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1540813365655},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1540813365655},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1540813365656},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1540813365656},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"8ac2f5d2a023211d8d8ea626cbf6b8dea67ac201","modified":1540813365656},{"_id":"themes/next/docs/zh-CN/README.md","hash":"aa6808f4f587c1a97205fa9427ba96a366bcb288","modified":1540813365657},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1540813365657},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1540813365662},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1540813365662},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1540813365663},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1540813365664},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1540813365664},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1540813365665},{"_id":"themes/next/layout/_macro/post.swig","hash":"5767eccaf3951151e01c61189016932e9516c8b9","modified":1540813365665},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1540813365666},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1540813365666},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1540813365666},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1540813365667},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1540813365667},{"_id":"themes/next/layout/_partials/footer.swig","hash":"d15a983de60d4c0bdd23cd31cd49de876ed2310c","modified":1540813365667},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1540813365670},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1540813365670},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1540813365673},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1540813365674},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1540813365674},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"f380a10c792411eff82204305b097a288ed0b423","modified":1540813365675},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1540813365679},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1540813365682},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1540813365682},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1540813365683},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1540813365685},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1540813365685},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1540813365686},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1540813365687},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1540813365687},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1540813365697},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1540813365697},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1540813365697},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1540813365698},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1540813365698},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1540813365699},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1540813365699},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1540813365699},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1540813365700},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1540813365773},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1540813365773},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1540813365774},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1540813365774},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1540813365774},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1540813365775},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1540813365775},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1540813365776},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1540813365776},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1540813365776},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1540813365777},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1540813365777},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1540813365777},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540813365777},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1540813365778},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540813365778},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1540813365778},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1540813365779},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1540813365779},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365675},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365675},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365763},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365763},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365764},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365772},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540813365773},{"_id":"themes/next/.git/refs/heads/master","hash":"edcf535b472b4c99fc37e736c3ed36519ad319c5","modified":1540813365642},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1540813365663},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1540813365664},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1540813365668},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1540813365668},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1540813365668},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1540813365669},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1540813365669},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1540813365670},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1540813365670},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1540813365671},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1540813365671},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1540813365671},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1540813365672},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1540813365672},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1540813365672},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1540813365673},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1540813365674},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1540813365675},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1540813365675},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1540813365676},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1540813365676},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1540813365676},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"07307f1f0e0e9858f2c7143cbdfcb2a9a92149ab","modified":1540813365677},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1540813365677},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1540813365677},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1540813365678},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1540813365677},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5dbeb640707a9c91357e373b9063a48c8e78f439","modified":1540813365678},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1540813365678},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1540813365678},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1540813365678},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1540813365679},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1540813365679},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1540813365680},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1540813365679},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1540813365680},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1540813365681},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1540813365681},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1540813365682},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1540813365683},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1540813365684},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1540813365684},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1540813365689},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1540813365690},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1540813365690},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1540813365690},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1540813365763},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1540813365763},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1540813365764},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"59961fb806a39c367fd19ad37268eee112be6729","modified":1540813365764},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1540813365771},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1540813365772},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1540813365772},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f9b83d0385529e52ce7ba95ed5ed6b3d4e2419bb","modified":1540813365772},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1540813365780},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1540813365780},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1540813365780},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1540813365781},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1540813365781},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1540813365781},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1540813365782},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1540813365782},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1540813365783},{"_id":"themes/next/source/js/src/utils.js","hash":"66f2ac658d6110f70a86f784d0c5d891a97c14bd","modified":1540813365783},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1540813365784},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1540813365784},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1540813365785},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1540813365785},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1540813365785},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1540813365796},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1540813365796},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1540813365796},{"_id":"themes/next/.git/objects/pack/pack-cd29e52985a3356fafb8ad5b8fe01ff1e44f2186.idx","hash":"7846ab6ade58acd3075a39756bad23427d5f8ede","modified":1540813365628},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1540813365792},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"5d3b8afa596da48f73abc237d822281a71b71a99","modified":1540813365642},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1540813365640},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1540813365689},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1540813365689},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b4a2f1d031fe44452cf55ded8211cf018235073a","modified":1540813365702},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1540813365702},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1540813365703},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1540813365703},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1540813365704},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1540813365734},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1540813365752},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1540813365760},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"b75256fe3768b1a37b6ff6dd7f9f0ff135a42067","modified":1540813365760},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1540813365761},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1540813365761},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1540813365761},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1540813365762},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"02d138ed65060e98f20bc5b1dd59a791222b7156","modified":1540813365762},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"665b1813a1d6fbc3c5549a76e4f26cd62a804dde","modified":1540813365764},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1540813365765},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1540813365765},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1540813365765},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1540813365766},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1540813365766},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1540813365766},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1540813365767},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1540813365768},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1540813365768},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1540813365768},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1540813365768},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1540813365769},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1540813365769},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1540813365770},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1540813365770},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1540813365770},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1540813365771},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1540813365771},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1540813365771},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"89267bd16ecbedd1958af7f0fb3f4f654d24fffa","modified":1540813365782},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1540813365786},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1540813365787},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1540813365787},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1540813365793},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1540813365793},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1540813365790},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1540813365791},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1540813365795},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"5d3b8afa596da48f73abc237d822281a71b71a99","modified":1540813365640},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1540813365705},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1540813365706},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1540813365706},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1540813365707},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1540813365707},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1540813365708},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1540813365708},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a6dc3c7eb81ef5117c28fa2245fff1adc02d0292","modified":1540813365729},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1540813365728},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1540813365729},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1540813365730},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1540813365731},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1540813365732},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1540813365732},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1540813365733},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f2911a048e5c20ca2a059bd1087d98ac1c51681c","modified":1540813365733},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1540813365735},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1540813365735},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1540813365736},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1540813365736},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1540813365737},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1540813365737},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1540813365738},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1540813365739},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1540813365740},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1540813365739},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1540813365741},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1540813365742},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"fcbbf06b546c366d70b7d2ba5880b0be3ca1e8ea","modified":1540813365742},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1540813365743},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1540813365743},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"6089cbf4c907fe198b6501e40dc937480d0be175","modified":1540813365744},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1540813365745},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1540813365746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1540813365748},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1540813365747},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1540813365748},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1540813365749},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1540813365750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1540813365750},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1540813365751},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1540813365751},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1540813365752},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1540813365753},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1540813365753},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1540813365753},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1540813365754},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1540813365754},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1540813365754},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"5e340ee2407a4e39cd708794cfcc718a5f398d7b","modified":1540813365755},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1540813365756},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1540813365757},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1540813365757},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1540813365758},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1540813365759},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1540813365759},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1540813365759},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1540813365760},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1540813365767},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1540813365767},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1540813365769},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1540813365789},{"_id":"themes/next/.git/objects/pack/pack-cd29e52985a3356fafb8ad5b8fe01ff1e44f2186.pack","hash":"4fa5a52df81592ead9629b05f8af1c46461b512e","modified":1540813365627}],"Category":[],"Data":[],"Page":[{"date":"2017-03-06T09:57:15.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ndate: 2017-03-06 17:57:15\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-10-29T09:35:13.291Z","path":"tags/index.html","title":"","layout":"page","_id":"cjnu6bxwx000bgz1fyh1ebdaa","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Mac定时任务","_content":"使用Crontab实现定时任务    \n1、编辑crontab文件：   \n    `crontab -e`     \n2、列出crontab文件    \n<!-- more --> \n   `crontab -l`     \n3、crontab文件格式       \n`* * * * * myCommand`(分别代表：`分 时 日 月 星期 要运行的命令`)       \n4、crontab输出日志     \n`* * * * * myCommand>>logpath`       \n[参考资料](http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html)","source":"_posts/2017-02-21-Mac定时任务.md","raw":"---\ntitle:  \"Mac定时任务\"\ntag: Mac\n---\n使用Crontab实现定时任务    \n1、编辑crontab文件：   \n    `crontab -e`     \n2、列出crontab文件    \n<!-- more --> \n   `crontab -l`     \n3、crontab文件格式       \n`* * * * * myCommand`(分别代表：`分 时 日 月 星期 要运行的命令`)       \n4、crontab输出日志     \n`* * * * * myCommand>>logpath`       \n[参考资料](http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html)","slug":"2017-02-21-Mac定时任务","published":1,"date":"2018-10-29T09:35:13.290Z","updated":"2018-10-29T09:35:13.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnu6bxwj0000gz1ft4h8mjtq","content":"<p>使用Crontab实现定时任务<br>1、编辑crontab文件：<br>    <code>crontab -e</code><br>2、列出crontab文件<br><a id=\"more\"></a><br>   <code>crontab -l</code><br>3、crontab文件格式<br><code>* * * * * myCommand</code>(分别代表：<code>分 时 日 月 星期 要运行的命令</code>)<br>4、crontab输出日志<br><code>* * * * * myCommand&gt;&gt;logpath</code><br><a href=\"http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html\" target=\"_blank\" rel=\"noopener\">参考资料</a></p>\n","site":{"data":{}},"excerpt":"<p>使用Crontab实现定时任务<br>1、编辑crontab文件：<br>    <code>crontab -e</code><br>2、列出crontab文件<br>","more":"<br>   <code>crontab -l</code><br>3、crontab文件格式<br><code>* * * * * myCommand</code>(分别代表：<code>分 时 日 月 星期 要运行的命令</code>)<br>4、crontab输出日志<br><code>* * * * * myCommand&gt;&gt;logpath</code><br><a href=\"http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html\" target=\"_blank\" rel=\"noopener\">参考资料</a></p>"},{"title":"Linux常用命令","_content":"1、cd命令    切换目录\n\n2、ls命令   查看当前目录下的文件\n\n      ls -a   列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）\n\n3、mkdir命令  创建一个文件夹的命令\n   touch命令  创建一个文件\n<!-- more -->\n\n4、cp命令 该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下\n   `cp 文件名 目录名`\n\n    cp testVim ljj 将testVim文件复制到ljj文件夹下\n\n* -a ：将文件的特性一起复制\n* -p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份\n* -i ：若目标文件已经存在时，在覆盖时会先询问操作的进行\n* -r ：递归持续复制，用于目录的复制行为\n* -u ：目标文件与源文件有差异时才会复制\n\n> 例如\n `cp -a file1 file2` #连同文件的所有特性把文件file1复制成文件file2\n `cp file1 file2 file3 dir` #把文件file1、file2、file3复制到目录dir中\n\n5、grep命令\n\n该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为\n\n     grep [-acinv] [--color=auto] '查找字符串' filename\n\n* -a ：将binary文件以text文件的方式查找数据\n* -c ：计算找到‘查找字符串’的次数\n* -i ：忽略大小写的区别，即把大小写视为相同\n* -v ：反向选择，即显示出没有‘查找字符串’内容的那一行\n\n> 例如：\n 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色\n   `grep --color=auto 'MANPATH' /etc/man.config`\n  # 把 ls -l的输出中包含字母file（不区分大小写）的内容输出\n  `ls -l | grep -i file`\n\n5、find命令\nfind是一个基于查找的功能非常强大的命令\n\n    find [PATH] [option] [action]\n\n # 与时间有关的参数：\n* -mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；\n* -mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；\n* -mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；\n* -newer file : 列出比file还要新的文件名\n\n> 例如：\n  `find /root -mtime 0` # 在当前目录下查找今天之内有改动的文件\n\n # 与用户或用户组名有关的参数：\n*  -user name : 列出文件所有者为name的文件\n*  -group name : 列出文件所属用户组为name的文件\n*  -uid n : 列出文件所有者为用户ID为n的文件\n*  -gid n : 列出文件所属用户组为用户组ID为n的文件\n\n> 例如：\n  `find /home/ljianhui -user ljianhui` # 在目录/home/ljianhui中找出所有者为ljianhui的文件\n\n  # 与文件权限及名称有关的参数：\n*  -name filename ：找出文件名为filename的文件\n*  -size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件\n*  -tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；\n*  -perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；\n*  -perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示\n*  -perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示\n\n> 例如：\n   `find / -name passwd` # 查找文件名为passwd的文件\n   `find . -perm 0755` # 查找当前目录中文件权限的0755的文件\n   `find . -size +12k` # 查找当前目录中大于12KB的文件，注意c表示byte","source":"_posts/2017-02-21-Linux常用命令.md","raw":"---\ntitle:  \"Linux常用命令\"\ntags: Linux\n---\n1、cd命令    切换目录\n\n2、ls命令   查看当前目录下的文件\n\n      ls -a   列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）\n\n3、mkdir命令  创建一个文件夹的命令\n   touch命令  创建一个文件\n<!-- more -->\n\n4、cp命令 该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下\n   `cp 文件名 目录名`\n\n    cp testVim ljj 将testVim文件复制到ljj文件夹下\n\n* -a ：将文件的特性一起复制\n* -p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份\n* -i ：若目标文件已经存在时，在覆盖时会先询问操作的进行\n* -r ：递归持续复制，用于目录的复制行为\n* -u ：目标文件与源文件有差异时才会复制\n\n> 例如\n `cp -a file1 file2` #连同文件的所有特性把文件file1复制成文件file2\n `cp file1 file2 file3 dir` #把文件file1、file2、file3复制到目录dir中\n\n5、grep命令\n\n该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为\n\n     grep [-acinv] [--color=auto] '查找字符串' filename\n\n* -a ：将binary文件以text文件的方式查找数据\n* -c ：计算找到‘查找字符串’的次数\n* -i ：忽略大小写的区别，即把大小写视为相同\n* -v ：反向选择，即显示出没有‘查找字符串’内容的那一行\n\n> 例如：\n 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色\n   `grep --color=auto 'MANPATH' /etc/man.config`\n  # 把 ls -l的输出中包含字母file（不区分大小写）的内容输出\n  `ls -l | grep -i file`\n\n5、find命令\nfind是一个基于查找的功能非常强大的命令\n\n    find [PATH] [option] [action]\n\n # 与时间有关的参数：\n* -mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；\n* -mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；\n* -mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；\n* -newer file : 列出比file还要新的文件名\n\n> 例如：\n  `find /root -mtime 0` # 在当前目录下查找今天之内有改动的文件\n\n # 与用户或用户组名有关的参数：\n*  -user name : 列出文件所有者为name的文件\n*  -group name : 列出文件所属用户组为name的文件\n*  -uid n : 列出文件所有者为用户ID为n的文件\n*  -gid n : 列出文件所属用户组为用户组ID为n的文件\n\n> 例如：\n  `find /home/ljianhui -user ljianhui` # 在目录/home/ljianhui中找出所有者为ljianhui的文件\n\n  # 与文件权限及名称有关的参数：\n*  -name filename ：找出文件名为filename的文件\n*  -size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件\n*  -tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；\n*  -perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；\n*  -perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示\n*  -perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示\n\n> 例如：\n   `find / -name passwd` # 查找文件名为passwd的文件\n   `find . -perm 0755` # 查找当前目录中文件权限的0755的文件\n   `find . -size +12k` # 查找当前目录中大于12KB的文件，注意c表示byte","slug":"2017-02-21-Linux常用命令","published":1,"date":"2018-10-29T09:35:13.289Z","updated":"2018-10-29T09:35:13.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnu6bxwn0001gz1fw3o80yy3","content":"<p>1、cd命令    切换目录</p>\n<p>2、ls命令   查看当前目录下的文件</p>\n<pre><code>ls -a   列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）\n</code></pre><p>3、mkdir命令  创建一个文件夹的命令<br>   touch命令  创建一个文件<br><a id=\"more\"></a></p>\n<p>4、cp命令 该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下<br>   <code>cp 文件名 目录名</code></p>\n<pre><code>cp testVim ljj 将testVim文件复制到ljj文件夹下\n</code></pre><ul>\n<li>-a ：将文件的特性一起复制</li>\n<li>-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份</li>\n<li>-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行</li>\n<li>-r ：递归持续复制，用于目录的复制行为</li>\n<li>-u ：目标文件与源文件有差异时才会复制</li>\n</ul>\n<blockquote>\n<p>例如<br> <code>cp -a file1 file2</code> #连同文件的所有特性把文件file1复制成文件file2<br> <code>cp file1 file2 file3 dir</code> #把文件file1、file2、file3复制到目录dir中</p>\n</blockquote>\n<p>5、grep命令</p>\n<p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为</p>\n<pre><code>grep [-acinv] [--color=auto] &apos;查找字符串&apos; filename\n</code></pre><ul>\n<li>-a ：将binary文件以text文件的方式查找数据</li>\n<li>-c ：计算找到‘查找字符串’的次数</li>\n<li>-i ：忽略大小写的区别，即把大小写视为相同</li>\n<li>-v ：反向选择，即显示出没有‘查找字符串’内容的那一行</li>\n</ul>\n<blockquote>\n<p>例如：<br> 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色<br>   <code>grep --color=auto &#39;MANPATH&#39; /etc/man.config</code></p>\n</blockquote>\n<h1 id=\"把-ls-l的输出中包含字母file（不区分大小写）的内容输出\"><a href=\"#把-ls-l的输出中包含字母file（不区分大小写）的内容输出\" class=\"headerlink\" title=\"把 ls -l的输出中包含字母file（不区分大小写）的内容输出\"></a>把 ls -l的输出中包含字母file（不区分大小写）的内容输出</h1><p>  <code>ls -l | grep -i file</code></p>\n<p>5、find命令<br>find是一个基于查找的功能非常强大的命令</p>\n<pre><code>find [PATH] [option] [action]\n</code></pre><h1 id=\"与时间有关的参数：\"><a href=\"#与时间有关的参数：\" class=\"headerlink\" title=\"与时间有关的参数：\"></a>与时间有关的参数：</h1><ul>\n<li>-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；</li>\n<li>-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；</li>\n<li>-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；</li>\n<li>-newer file : 列出比file还要新的文件名</li>\n</ul>\n<blockquote>\n<p>例如：<br>  <code>find /root -mtime 0</code> # 在当前目录下查找今天之内有改动的文件</p>\n</blockquote>\n<h1 id=\"与用户或用户组名有关的参数：\"><a href=\"#与用户或用户组名有关的参数：\" class=\"headerlink\" title=\"与用户或用户组名有关的参数：\"></a>与用户或用户组名有关的参数：</h1><ul>\n<li>-user name : 列出文件所有者为name的文件</li>\n<li>-group name : 列出文件所属用户组为name的文件</li>\n<li>-uid n : 列出文件所有者为用户ID为n的文件</li>\n<li>-gid n : 列出文件所属用户组为用户组ID为n的文件</li>\n</ul>\n<blockquote>\n<p>例如：<br>  <code>find /home/ljianhui -user ljianhui</code> # 在目录/home/ljianhui中找出所有者为ljianhui的文件</p>\n</blockquote>\n<h1 id=\"与文件权限及名称有关的参数：\"><a href=\"#与文件权限及名称有关的参数：\" class=\"headerlink\" title=\"与文件权限及名称有关的参数：\"></a>与文件权限及名称有关的参数：</h1><ul>\n<li>-name filename ：找出文件名为filename的文件</li>\n<li>-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件</li>\n<li>-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；</li>\n<li>-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；</li>\n<li>-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示</li>\n<li>-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示</li>\n</ul>\n<blockquote>\n<p>例如：<br>   <code>find / -name passwd</code> # 查找文件名为passwd的文件<br>   <code>find . -perm 0755</code> # 查找当前目录中文件权限的0755的文件<br>   <code>find . -size +12k</code> # 查找当前目录中大于12KB的文件，注意c表示byte</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>1、cd命令    切换目录</p>\n<p>2、ls命令   查看当前目录下的文件</p>\n<pre><code>ls -a   列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）\n</code></pre><p>3、mkdir命令  创建一个文件夹的命令<br>   touch命令  创建一个文件<br>","more":"</p>\n<p>4、cp命令 该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下<br>   <code>cp 文件名 目录名</code></p>\n<pre><code>cp testVim ljj 将testVim文件复制到ljj文件夹下\n</code></pre><ul>\n<li>-a ：将文件的特性一起复制</li>\n<li>-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份</li>\n<li>-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行</li>\n<li>-r ：递归持续复制，用于目录的复制行为</li>\n<li>-u ：目标文件与源文件有差异时才会复制</li>\n</ul>\n<blockquote>\n<p>例如<br> <code>cp -a file1 file2</code> #连同文件的所有特性把文件file1复制成文件file2<br> <code>cp file1 file2 file3 dir</code> #把文件file1、file2、file3复制到目录dir中</p>\n</blockquote>\n<p>5、grep命令</p>\n<p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为</p>\n<pre><code>grep [-acinv] [--color=auto] &apos;查找字符串&apos; filename\n</code></pre><ul>\n<li>-a ：将binary文件以text文件的方式查找数据</li>\n<li>-c ：计算找到‘查找字符串’的次数</li>\n<li>-i ：忽略大小写的区别，即把大小写视为相同</li>\n<li>-v ：反向选择，即显示出没有‘查找字符串’内容的那一行</li>\n</ul>\n<blockquote>\n<p>例如：<br> 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色<br>   <code>grep --color=auto &#39;MANPATH&#39; /etc/man.config</code></p>\n</blockquote>\n<h1 id=\"把-ls-l的输出中包含字母file（不区分大小写）的内容输出\"><a href=\"#把-ls-l的输出中包含字母file（不区分大小写）的内容输出\" class=\"headerlink\" title=\"把 ls -l的输出中包含字母file（不区分大小写）的内容输出\"></a>把 ls -l的输出中包含字母file（不区分大小写）的内容输出</h1><p>  <code>ls -l | grep -i file</code></p>\n<p>5、find命令<br>find是一个基于查找的功能非常强大的命令</p>\n<pre><code>find [PATH] [option] [action]\n</code></pre><h1 id=\"与时间有关的参数：\"><a href=\"#与时间有关的参数：\" class=\"headerlink\" title=\"与时间有关的参数：\"></a>与时间有关的参数：</h1><ul>\n<li>-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；</li>\n<li>-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；</li>\n<li>-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；</li>\n<li>-newer file : 列出比file还要新的文件名</li>\n</ul>\n<blockquote>\n<p>例如：<br>  <code>find /root -mtime 0</code> # 在当前目录下查找今天之内有改动的文件</p>\n</blockquote>\n<h1 id=\"与用户或用户组名有关的参数：\"><a href=\"#与用户或用户组名有关的参数：\" class=\"headerlink\" title=\"与用户或用户组名有关的参数：\"></a>与用户或用户组名有关的参数：</h1><ul>\n<li>-user name : 列出文件所有者为name的文件</li>\n<li>-group name : 列出文件所属用户组为name的文件</li>\n<li>-uid n : 列出文件所有者为用户ID为n的文件</li>\n<li>-gid n : 列出文件所属用户组为用户组ID为n的文件</li>\n</ul>\n<blockquote>\n<p>例如：<br>  <code>find /home/ljianhui -user ljianhui</code> # 在目录/home/ljianhui中找出所有者为ljianhui的文件</p>\n</blockquote>\n<h1 id=\"与文件权限及名称有关的参数：\"><a href=\"#与文件权限及名称有关的参数：\" class=\"headerlink\" title=\"与文件权限及名称有关的参数：\"></a>与文件权限及名称有关的参数：</h1><ul>\n<li>-name filename ：找出文件名为filename的文件</li>\n<li>-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件</li>\n<li>-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；</li>\n<li>-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；</li>\n<li>-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示</li>\n<li>-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示</li>\n</ul>\n<blockquote>\n<p>例如：<br>   <code>find / -name passwd</code> # 查找文件名为passwd的文件<br>   <code>find . -perm 0755</code> # 查找当前目录中文件权限的0755的文件<br>   <code>find . -size +12k</code> # 查找当前目录中大于12KB的文件，注意c表示byte</p>\n</blockquote>"},{"title":"Markdown语法示例","_content":"### 强调效果\n**粗体效果（双星号）**  __粗体效果（双下划线）__\n\n\t**粗体效果（双星号）**  __粗体效果（双下划线）__\n*斜体效果（单星号在前）斜体效果（单星号在后）*\n<!-- more -->\n\n\t*斜体效果（单星号在前）斜体效果（单星号在后）*\n_斜体效果（单下划线）_\n\n\t_斜体效果（单下划线）_\n\n### 分割线\n英文输入法下面三个下划线`___` ,必须单独成行\n___\n### 引用\n\n> 引用效果\n>> 引用中的引用\n>>>引用中的引用中的引用\n\n\n    ` > 引用效果\n      >> 引用中的引用\n      >>>引用中的引用中的引用\n\n### 标题\n大标题（标题下面三个=）\n===\n\n\t大标题（标题下面三个=）\n\t===\n小标题（标题下面三个-）\n---\n\t小标题（标题下面三个-）\n\t---\n# 一级标题（#）\n## 二级标题 （##）\n### 三级标题 （###）\n#### 四级标题 （####）\n##### 五级标题 （#####）\n###### 六级标题 （######）\n### 无序列表\n- 无序列表（符号之后有空格）`- 无序列表（符号之后有空格`\n* 无序列表 （- * +都可以） `* 无序列表(- * +都可以)`\n+ 无序列表   `+ 无序列表`\n\n### 有序列表\n1. 有序列表\n2. 有序列表\n3. 有序列表\n\n### 嵌套列表\n+ 嵌套列表（+*-可循环使用）\n   + 嵌套列表\n   + 嵌套列表\n     + 嵌套列表\n     + 嵌套列表\n\n### 文字超链接\n[百度](http://www.baidu.com)\n\n    [百度](http://www.baidu.com)\n    [百度](http://www.baidu.com \"百度\")\n### 图片超链接\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\nTooltips可省略，要设置大小只能借助HTML标记\n### 索引超链接\n[Stepway's Notes][1]\n![GitHub Octocat][2]\n[1]:http://notes.stepway.me\n[2]:http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png\n### 自动链接\n<http://www.baidu.com>\n\n    <http://www.baidu.com>\n### 行内代码\n`var a = 'hello world'`\n\n    `var b = 'hello Markdown'`\n### 段落代码\n\t四个空格或者一个tab键\n\tvar a = ’hello world‘\n\tvar b = 'hello Markdown'\n### 注释\n### 转义字符\n### 表格\n\n\n\n\n\n\n","source":"_posts/2017-02-21-Markdown语法示例.md","raw":"---\ntitle:  \"Markdown语法示例\"\n---\n### 强调效果\n**粗体效果（双星号）**  __粗体效果（双下划线）__\n\n\t**粗体效果（双星号）**  __粗体效果（双下划线）__\n*斜体效果（单星号在前）斜体效果（单星号在后）*\n<!-- more -->\n\n\t*斜体效果（单星号在前）斜体效果（单星号在后）*\n_斜体效果（单下划线）_\n\n\t_斜体效果（单下划线）_\n\n### 分割线\n英文输入法下面三个下划线`___` ,必须单独成行\n___\n### 引用\n\n> 引用效果\n>> 引用中的引用\n>>>引用中的引用中的引用\n\n\n    ` > 引用效果\n      >> 引用中的引用\n      >>>引用中的引用中的引用\n\n### 标题\n大标题（标题下面三个=）\n===\n\n\t大标题（标题下面三个=）\n\t===\n小标题（标题下面三个-）\n---\n\t小标题（标题下面三个-）\n\t---\n# 一级标题（#）\n## 二级标题 （##）\n### 三级标题 （###）\n#### 四级标题 （####）\n##### 五级标题 （#####）\n###### 六级标题 （######）\n### 无序列表\n- 无序列表（符号之后有空格）`- 无序列表（符号之后有空格`\n* 无序列表 （- * +都可以） `* 无序列表(- * +都可以)`\n+ 无序列表   `+ 无序列表`\n\n### 有序列表\n1. 有序列表\n2. 有序列表\n3. 有序列表\n\n### 嵌套列表\n+ 嵌套列表（+*-可循环使用）\n   + 嵌套列表\n   + 嵌套列表\n     + 嵌套列表\n     + 嵌套列表\n\n### 文字超链接\n[百度](http://www.baidu.com)\n\n    [百度](http://www.baidu.com)\n    [百度](http://www.baidu.com \"百度\")\n### 图片超链接\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\nTooltips可省略，要设置大小只能借助HTML标记\n### 索引超链接\n[Stepway's Notes][1]\n![GitHub Octocat][2]\n[1]:http://notes.stepway.me\n[2]:http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png\n### 自动链接\n<http://www.baidu.com>\n\n    <http://www.baidu.com>\n### 行内代码\n`var a = 'hello world'`\n\n    `var b = 'hello Markdown'`\n### 段落代码\n\t四个空格或者一个tab键\n\tvar a = ’hello world‘\n\tvar b = 'hello Markdown'\n### 注释\n### 转义字符\n### 表格\n\n\n\n\n\n\n","slug":"2017-02-21-Markdown语法示例","published":1,"date":"2018-10-29T09:35:13.290Z","updated":"2018-10-29T09:35:13.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnu6bxwr0003gz1fa40nm07m","content":"<h3 id=\"强调效果\"><a href=\"#强调效果\" class=\"headerlink\" title=\"强调效果\"></a>强调效果</h3><p><strong>粗体效果（双星号）</strong>  <strong>粗体效果（双下划线）</strong></p>\n<pre><code>**粗体效果（双星号）**  __粗体效果（双下划线）__\n</code></pre><p><em>斜体效果（单星号在前）斜体效果（单星号在后）</em><br><a id=\"more\"></a></p>\n<pre><code>*斜体效果（单星号在前）斜体效果（单星号在后）*\n</code></pre><p><em>斜体效果（单下划线）</em></p>\n<pre><code>_斜体效果（单下划线）_\n</code></pre><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><p>英文输入法下面三个下划线<code>___</code> ,必须单独成行</p>\n<hr>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p>引用效果</p>\n<blockquote>\n<p>引用中的引用</p>\n<blockquote>\n<p>引用中的引用中的引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<pre><code>` &gt; 引用效果\n  &gt;&gt; 引用中的引用\n  &gt;&gt;&gt;引用中的引用中的引用\n</code></pre><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h1 id=\"大标题（标题下面三个-）\"><a href=\"#大标题（标题下面三个-）\" class=\"headerlink\" title=\"大标题（标题下面三个=）\"></a>大标题（标题下面三个=）</h1><pre><code>大标题（标题下面三个=）\n===\n</code></pre><h2 id=\"小标题（标题下面三个-）\"><a href=\"#小标题（标题下面三个-）\" class=\"headerlink\" title=\"小标题（标题下面三个-）\"></a>小标题（标题下面三个-）</h2><pre><code>小标题（标题下面三个-）\n---\n</code></pre><h1 id=\"一级标题（-）\"><a href=\"#一级标题（-）\" class=\"headerlink\" title=\"一级标题（#）\"></a>一级标题（#）</h1><h2 id=\"二级标题-（-）\"><a href=\"#二级标题-（-）\" class=\"headerlink\" title=\"二级标题 （##）\"></a>二级标题 （##）</h2><h3 id=\"三级标题-（-）\"><a href=\"#三级标题-（-）\" class=\"headerlink\" title=\"三级标题 （###）\"></a>三级标题 （###）</h3><h4 id=\"四级标题-（-）\"><a href=\"#四级标题-（-）\" class=\"headerlink\" title=\"四级标题 （####）\"></a>四级标题 （####）</h4><h5 id=\"五级标题-（-）\"><a href=\"#五级标题-（-）\" class=\"headerlink\" title=\"五级标题 （#####）\"></a>五级标题 （#####）</h5><h6 id=\"六级标题-（-）\"><a href=\"#六级标题-（-）\" class=\"headerlink\" title=\"六级标题 （######）\"></a>六级标题 （######）</h6><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><ul>\n<li>无序列表（符号之后有空格）<code>- 无序列表（符号之后有空格</code></li>\n</ul>\n<ul>\n<li>无序列表 （- <em> +都可以） `</em> 无序列表(- * +都可以)`</li>\n</ul>\n<ul>\n<li>无序列表   <code>+ 无序列表</code></li>\n</ul>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<h3 id=\"嵌套列表\"><a href=\"#嵌套列表\" class=\"headerlink\" title=\"嵌套列表\"></a>嵌套列表</h3><ul>\n<li>嵌套列表（+*-可循环使用）<ul>\n<li>嵌套列表</li>\n<li>嵌套列表<ul>\n<li>嵌套列表</li>\n<li>嵌套列表</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"文字超链接\"><a href=\"#文字超链接\" class=\"headerlink\" title=\"文字超链接\"></a>文字超链接</h3><p><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<pre><code>[百度](http://www.baidu.com)\n[百度](http://www.baidu.com &quot;百度&quot;)\n</code></pre><h3 id=\"图片超链接\"><a href=\"#图片超链接\" class=\"headerlink\" title=\"图片超链接\"></a>图片超链接</h3><p><img src=\"http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Mark\" title=\"GitHub Mark\"><br>Tooltips可省略，要设置大小只能借助HTML标记</p>\n<h3 id=\"索引超链接\"><a href=\"#索引超链接\" class=\"headerlink\" title=\"索引超链接\"></a>索引超链接</h3><p>[Stepway’s Notes][1]<br>![GitHub Octocat][2]<br>[1]:<a href=\"http://notes.stepway.me\" target=\"_blank\" rel=\"noopener\">http://notes.stepway.me</a><br>[2]:<a href=\"http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png\" target=\"_blank\" rel=\"noopener\">http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png</a></p>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><p><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com</a></p>\n<pre><code>&lt;http://www.baidu.com&gt;\n</code></pre><h3 id=\"行内代码\"><a href=\"#行内代码\" class=\"headerlink\" title=\"行内代码\"></a>行内代码</h3><p><code>var a = &#39;hello world&#39;</code></p>\n<pre><code>`var b = &apos;hello Markdown&apos;`\n</code></pre><h3 id=\"段落代码\"><a href=\"#段落代码\" class=\"headerlink\" title=\"段落代码\"></a>段落代码</h3><pre><code>四个空格或者一个tab键\nvar a = ’hello world‘\nvar b = &apos;hello Markdown&apos;\n</code></pre><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3>","site":{"data":{}},"excerpt":"<h3 id=\"强调效果\"><a href=\"#强调效果\" class=\"headerlink\" title=\"强调效果\"></a>强调效果</h3><p><strong>粗体效果（双星号）</strong>  <strong>粗体效果（双下划线）</strong></p>\n<pre><code>**粗体效果（双星号）**  __粗体效果（双下划线）__\n</code></pre><p><em>斜体效果（单星号在前）斜体效果（单星号在后）</em><br>","more":"</p>\n<pre><code>*斜体效果（单星号在前）斜体效果（单星号在后）*\n</code></pre><p><em>斜体效果（单下划线）</em></p>\n<pre><code>_斜体效果（单下划线）_\n</code></pre><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><p>英文输入法下面三个下划线<code>___</code> ,必须单独成行</p>\n<hr>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p>引用效果</p>\n<blockquote>\n<p>引用中的引用</p>\n<blockquote>\n<p>引用中的引用中的引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<pre><code>` &gt; 引用效果\n  &gt;&gt; 引用中的引用\n  &gt;&gt;&gt;引用中的引用中的引用\n</code></pre><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><h1 id=\"大标题（标题下面三个-）\"><a href=\"#大标题（标题下面三个-）\" class=\"headerlink\" title=\"大标题（标题下面三个=）\"></a>大标题（标题下面三个=）</h1><pre><code>大标题（标题下面三个=）\n===\n</code></pre><h2 id=\"小标题（标题下面三个-）\"><a href=\"#小标题（标题下面三个-）\" class=\"headerlink\" title=\"小标题（标题下面三个-）\"></a>小标题（标题下面三个-）</h2><pre><code>小标题（标题下面三个-）\n---\n</code></pre><h1 id=\"一级标题（-）\"><a href=\"#一级标题（-）\" class=\"headerlink\" title=\"一级标题（#）\"></a>一级标题（#）</h1><h2 id=\"二级标题-（-）\"><a href=\"#二级标题-（-）\" class=\"headerlink\" title=\"二级标题 （##）\"></a>二级标题 （##）</h2><h3 id=\"三级标题-（-）\"><a href=\"#三级标题-（-）\" class=\"headerlink\" title=\"三级标题 （###）\"></a>三级标题 （###）</h3><h4 id=\"四级标题-（-）\"><a href=\"#四级标题-（-）\" class=\"headerlink\" title=\"四级标题 （####）\"></a>四级标题 （####）</h4><h5 id=\"五级标题-（-）\"><a href=\"#五级标题-（-）\" class=\"headerlink\" title=\"五级标题 （#####）\"></a>五级标题 （#####）</h5><h6 id=\"六级标题-（-）\"><a href=\"#六级标题-（-）\" class=\"headerlink\" title=\"六级标题 （######）\"></a>六级标题 （######）</h6><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><ul>\n<li>无序列表（符号之后有空格）<code>- 无序列表（符号之后有空格</code></li>\n</ul>\n<ul>\n<li>无序列表 （- <em> +都可以） `</em> 无序列表(- * +都可以)`</li>\n</ul>\n<ul>\n<li>无序列表   <code>+ 无序列表</code></li>\n</ul>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<h3 id=\"嵌套列表\"><a href=\"#嵌套列表\" class=\"headerlink\" title=\"嵌套列表\"></a>嵌套列表</h3><ul>\n<li>嵌套列表（+*-可循环使用）<ul>\n<li>嵌套列表</li>\n<li>嵌套列表<ul>\n<li>嵌套列表</li>\n<li>嵌套列表</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"文字超链接\"><a href=\"#文字超链接\" class=\"headerlink\" title=\"文字超链接\"></a>文字超链接</h3><p><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<pre><code>[百度](http://www.baidu.com)\n[百度](http://www.baidu.com &quot;百度&quot;)\n</code></pre><h3 id=\"图片超链接\"><a href=\"#图片超链接\" class=\"headerlink\" title=\"图片超链接\"></a>图片超链接</h3><p><img src=\"http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Mark\" title=\"GitHub Mark\"><br>Tooltips可省略，要设置大小只能借助HTML标记</p>\n<h3 id=\"索引超链接\"><a href=\"#索引超链接\" class=\"headerlink\" title=\"索引超链接\"></a>索引超链接</h3><p>[Stepway’s Notes][1]<br>![GitHub Octocat][2]<br>[1]:<a href=\"http://notes.stepway.me\" target=\"_blank\" rel=\"noopener\">http://notes.stepway.me</a><br>[2]:<a href=\"http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png\" target=\"_blank\" rel=\"noopener\">http://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png</a></p>\n<h3 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h3><p><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com</a></p>\n<pre><code>&lt;http://www.baidu.com&gt;\n</code></pre><h3 id=\"行内代码\"><a href=\"#行内代码\" class=\"headerlink\" title=\"行内代码\"></a>行内代码</h3><p><code>var a = &#39;hello world&#39;</code></p>\n<pre><code>`var b = &apos;hello Markdown&apos;`\n</code></pre><h3 id=\"段落代码\"><a href=\"#段落代码\" class=\"headerlink\" title=\"段落代码\"></a>段落代码</h3><pre><code>四个空格或者一个tab键\nvar a = ’hello world‘\nvar b = &apos;hello Markdown&apos;\n</code></pre><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3>"},{"title":"React生命周期","_content":"**使用ES6语法**\n### 初始化阶段\n#### constructor\n\n\tconstructor(props) {\n\t  super(props); //必须的，否则 this.props will be undefined\n\t  this.state = {\n\t    color: props.initialColor\n\t  };\n\t}\n用来初始化state，绑定一些方法（bind methods）\n<!-- more -->\n#### componentWillMount\n在render之前调用,可以在这个方法里面调用 setState 改变状态，并且不会导致额外调用一次 render\n#### render() （必须的）\n* 只能访问this.props和this.state,只能有一个顶层组件\n* 也可以返回 null 或者 false，这时候 ReactDOM.findDOMNode(this) 会返回 null\n*  shouldComponentUpdate() 返回false时不会调用render()\n*  不允许修改状态和DOM输出\n\n#### componentDidMount()\nrender之后调用，可以通过 ReactDOM.findDOMNode(this) 获取到组件的 DOM 节点。如果需要从后端获取数据渲染页面可以在这里操作，setState将会触发render重新渲染。\n### 更新组件触发\n更新props或者state都会更新组件\n#### componentWillReceiveProps\n\tcomponentWillReceiveProps(nextProps)\n接收到新的props将触发此方法\n可以通过比较`this.props`和`nextProps`来\n#### shouldComponentUpdate\n\tshouldComponentUpdate(nextProps, nextState)\n默认返回ture，返回false的时候，而后的componentWillUpdate(),render(),和 componentDidUpdate()将不会被调用\n不过根据react官网，未来返回false可能仍然使得组件重渲。\n目前在项目中用到的不多。\n#### componentWillUpdate\n\tcomponentWillUpdate(nextProps, nextState)\n当接收到新的props和state，`componentWillUpdate`将在`render`之前被立即调用\n>不能在这调用this.setState()，若你需要更新状态响应属性的调整，使用`componentWillReceiveProps()`代替。\n\n#### componentDidUpdate\n`componentDidUpdate`会在更新发生后立即被调用\n当组件被更新时，使用该方法是操作DOM的一次机会。这也是一个适合发送请求的地方，要是你对比了当前属性和之前属性\n### 卸载组件触发\n#### componentWillUnmount\n`componentWillUnmount`在组件被卸载和销毁之前立刻调用\n### 综上\n#### 生命周期函数\n装载组件触发\n>constructor()\ncomponentWillMount()\nrender()\ncomponentDidMount()\n\n更新组件触发\n>componentWillReceiveProps()\nshouldComponentUpdate()\ncomponentWillUpdate()\nrender()\ncomponentDidUpdate()\n\n卸载组件触发\n>componentWillUnmount()\n\n### 类属性\n#### defaultProps\n用来设置默认属性\n\n**非使用ES6语法**\n<https://facebook.github.io/react/docs/react-without-es6.html>\n不打算使用 ES6，你也可以使用`create-react-class`模块来创建\n\n\tvar createReactClass = require('create-react-class');\n\tvar Greeting = createReactClass({\n\t  render: function() {\n\t    return <h1>Hello, {this.props.name}</h1>;\n\t  }\n\t});\n\n如果使用 `createReactClass` 方法创建组件，那就需要在参数对象中定义 `getDefaultProps` 方法，并且在这个方法中返回包含自定义属性的对象,定义`getInitialState` 方法，并让这个方法返回你要定义的初始属性\n","source":"_posts/2017-06-09-React生命周期.md","raw":"---\ntitle:  \"React生命周期\"\ntag: React\n---\n**使用ES6语法**\n### 初始化阶段\n#### constructor\n\n\tconstructor(props) {\n\t  super(props); //必须的，否则 this.props will be undefined\n\t  this.state = {\n\t    color: props.initialColor\n\t  };\n\t}\n用来初始化state，绑定一些方法（bind methods）\n<!-- more -->\n#### componentWillMount\n在render之前调用,可以在这个方法里面调用 setState 改变状态，并且不会导致额外调用一次 render\n#### render() （必须的）\n* 只能访问this.props和this.state,只能有一个顶层组件\n* 也可以返回 null 或者 false，这时候 ReactDOM.findDOMNode(this) 会返回 null\n*  shouldComponentUpdate() 返回false时不会调用render()\n*  不允许修改状态和DOM输出\n\n#### componentDidMount()\nrender之后调用，可以通过 ReactDOM.findDOMNode(this) 获取到组件的 DOM 节点。如果需要从后端获取数据渲染页面可以在这里操作，setState将会触发render重新渲染。\n### 更新组件触发\n更新props或者state都会更新组件\n#### componentWillReceiveProps\n\tcomponentWillReceiveProps(nextProps)\n接收到新的props将触发此方法\n可以通过比较`this.props`和`nextProps`来\n#### shouldComponentUpdate\n\tshouldComponentUpdate(nextProps, nextState)\n默认返回ture，返回false的时候，而后的componentWillUpdate(),render(),和 componentDidUpdate()将不会被调用\n不过根据react官网，未来返回false可能仍然使得组件重渲。\n目前在项目中用到的不多。\n#### componentWillUpdate\n\tcomponentWillUpdate(nextProps, nextState)\n当接收到新的props和state，`componentWillUpdate`将在`render`之前被立即调用\n>不能在这调用this.setState()，若你需要更新状态响应属性的调整，使用`componentWillReceiveProps()`代替。\n\n#### componentDidUpdate\n`componentDidUpdate`会在更新发生后立即被调用\n当组件被更新时，使用该方法是操作DOM的一次机会。这也是一个适合发送请求的地方，要是你对比了当前属性和之前属性\n### 卸载组件触发\n#### componentWillUnmount\n`componentWillUnmount`在组件被卸载和销毁之前立刻调用\n### 综上\n#### 生命周期函数\n装载组件触发\n>constructor()\ncomponentWillMount()\nrender()\ncomponentDidMount()\n\n更新组件触发\n>componentWillReceiveProps()\nshouldComponentUpdate()\ncomponentWillUpdate()\nrender()\ncomponentDidUpdate()\n\n卸载组件触发\n>componentWillUnmount()\n\n### 类属性\n#### defaultProps\n用来设置默认属性\n\n**非使用ES6语法**\n<https://facebook.github.io/react/docs/react-without-es6.html>\n不打算使用 ES6，你也可以使用`create-react-class`模块来创建\n\n\tvar createReactClass = require('create-react-class');\n\tvar Greeting = createReactClass({\n\t  render: function() {\n\t    return <h1>Hello, {this.props.name}</h1>;\n\t  }\n\t});\n\n如果使用 `createReactClass` 方法创建组件，那就需要在参数对象中定义 `getDefaultProps` 方法，并且在这个方法中返回包含自定义属性的对象,定义`getInitialState` 方法，并让这个方法返回你要定义的初始属性\n","slug":"2017-06-09-React生命周期","published":1,"date":"2018-10-29T09:35:13.290Z","updated":"2018-10-29T09:35:13.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnu6bxwt0007gz1fc6j22r8f","content":"<p><strong>使用ES6语法</strong></p>\n<h3 id=\"初始化阶段\"><a href=\"#初始化阶段\" class=\"headerlink\" title=\"初始化阶段\"></a>初始化阶段</h3><h4 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h4><pre><code>constructor(props) {\n  super(props); //必须的，否则 this.props will be undefined\n  this.state = {\n    color: props.initialColor\n  };\n}\n</code></pre><p>用来初始化state，绑定一些方法（bind methods）<br><a id=\"more\"></a></p>\n<h4 id=\"componentWillMount\"><a href=\"#componentWillMount\" class=\"headerlink\" title=\"componentWillMount\"></a>componentWillMount</h4><p>在render之前调用,可以在这个方法里面调用 setState 改变状态，并且不会导致额外调用一次 render</p>\n<h4 id=\"render-（必须的）\"><a href=\"#render-（必须的）\" class=\"headerlink\" title=\"render() （必须的）\"></a>render() （必须的）</h4><ul>\n<li>只能访问this.props和this.state,只能有一个顶层组件</li>\n<li>也可以返回 null 或者 false，这时候 ReactDOM.findDOMNode(this) 会返回 null</li>\n<li>shouldComponentUpdate() 返回false时不会调用render()</li>\n<li>不允许修改状态和DOM输出</li>\n</ul>\n<h4 id=\"componentDidMount\"><a href=\"#componentDidMount\" class=\"headerlink\" title=\"componentDidMount()\"></a>componentDidMount()</h4><p>render之后调用，可以通过 ReactDOM.findDOMNode(this) 获取到组件的 DOM 节点。如果需要从后端获取数据渲染页面可以在这里操作，setState将会触发render重新渲染。</p>\n<h3 id=\"更新组件触发\"><a href=\"#更新组件触发\" class=\"headerlink\" title=\"更新组件触发\"></a>更新组件触发</h3><p>更新props或者state都会更新组件</p>\n<h4 id=\"componentWillReceiveProps\"><a href=\"#componentWillReceiveProps\" class=\"headerlink\" title=\"componentWillReceiveProps\"></a>componentWillReceiveProps</h4><pre><code>componentWillReceiveProps(nextProps)\n</code></pre><p>接收到新的props将触发此方法<br>可以通过比较<code>this.props</code>和<code>nextProps</code>来</p>\n<h4 id=\"shouldComponentUpdate\"><a href=\"#shouldComponentUpdate\" class=\"headerlink\" title=\"shouldComponentUpdate\"></a>shouldComponentUpdate</h4><pre><code>shouldComponentUpdate(nextProps, nextState)\n</code></pre><p>默认返回ture，返回false的时候，而后的componentWillUpdate(),render(),和 componentDidUpdate()将不会被调用<br>不过根据react官网，未来返回false可能仍然使得组件重渲。<br>目前在项目中用到的不多。</p>\n<h4 id=\"componentWillUpdate\"><a href=\"#componentWillUpdate\" class=\"headerlink\" title=\"componentWillUpdate\"></a>componentWillUpdate</h4><pre><code>componentWillUpdate(nextProps, nextState)\n</code></pre><p>当接收到新的props和state，<code>componentWillUpdate</code>将在<code>render</code>之前被立即调用</p>\n<blockquote>\n<p>不能在这调用this.setState()，若你需要更新状态响应属性的调整，使用<code>componentWillReceiveProps()</code>代替。</p>\n</blockquote>\n<h4 id=\"componentDidUpdate\"><a href=\"#componentDidUpdate\" class=\"headerlink\" title=\"componentDidUpdate\"></a>componentDidUpdate</h4><p><code>componentDidUpdate</code>会在更新发生后立即被调用<br>当组件被更新时，使用该方法是操作DOM的一次机会。这也是一个适合发送请求的地方，要是你对比了当前属性和之前属性</p>\n<h3 id=\"卸载组件触发\"><a href=\"#卸载组件触发\" class=\"headerlink\" title=\"卸载组件触发\"></a>卸载组件触发</h3><h4 id=\"componentWillUnmount\"><a href=\"#componentWillUnmount\" class=\"headerlink\" title=\"componentWillUnmount\"></a>componentWillUnmount</h4><p><code>componentWillUnmount</code>在组件被卸载和销毁之前立刻调用</p>\n<h3 id=\"综上\"><a href=\"#综上\" class=\"headerlink\" title=\"综上\"></a>综上</h3><h4 id=\"生命周期函数\"><a href=\"#生命周期函数\" class=\"headerlink\" title=\"生命周期函数\"></a>生命周期函数</h4><p>装载组件触发</p>\n<blockquote>\n<p>constructor()<br>componentWillMount()<br>render()<br>componentDidMount()</p>\n</blockquote>\n<p>更新组件触发</p>\n<blockquote>\n<p>componentWillReceiveProps()<br>shouldComponentUpdate()<br>componentWillUpdate()<br>render()<br>componentDidUpdate()</p>\n</blockquote>\n<p>卸载组件触发</p>\n<blockquote>\n<p>componentWillUnmount()</p>\n</blockquote>\n<h3 id=\"类属性\"><a href=\"#类属性\" class=\"headerlink\" title=\"类属性\"></a>类属性</h3><h4 id=\"defaultProps\"><a href=\"#defaultProps\" class=\"headerlink\" title=\"defaultProps\"></a>defaultProps</h4><p>用来设置默认属性</p>\n<p><strong>非使用ES6语法</strong><br><a href=\"https://facebook.github.io/react/docs/react-without-es6.html\" target=\"_blank\" rel=\"noopener\">https://facebook.github.io/react/docs/react-without-es6.html</a><br>不打算使用 ES6，你也可以使用<code>create-react-class</code>模块来创建</p>\n<pre><code>var createReactClass = require(&apos;create-react-class&apos;);\nvar Greeting = createReactClass({\n  render: function() {\n    return &lt;h1&gt;Hello, {this.props.name}&lt;/h1&gt;;\n  }\n});\n</code></pre><p>如果使用 <code>createReactClass</code> 方法创建组件，那就需要在参数对象中定义 <code>getDefaultProps</code> 方法，并且在这个方法中返回包含自定义属性的对象,定义<code>getInitialState</code> 方法，并让这个方法返回你要定义的初始属性</p>\n","site":{"data":{}},"excerpt":"<p><strong>使用ES6语法</strong></p>\n<h3 id=\"初始化阶段\"><a href=\"#初始化阶段\" class=\"headerlink\" title=\"初始化阶段\"></a>初始化阶段</h3><h4 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h4><pre><code>constructor(props) {\n  super(props); //必须的，否则 this.props will be undefined\n  this.state = {\n    color: props.initialColor\n  };\n}\n</code></pre><p>用来初始化state，绑定一些方法（bind methods）<br>","more":"</p>\n<h4 id=\"componentWillMount\"><a href=\"#componentWillMount\" class=\"headerlink\" title=\"componentWillMount\"></a>componentWillMount</h4><p>在render之前调用,可以在这个方法里面调用 setState 改变状态，并且不会导致额外调用一次 render</p>\n<h4 id=\"render-（必须的）\"><a href=\"#render-（必须的）\" class=\"headerlink\" title=\"render() （必须的）\"></a>render() （必须的）</h4><ul>\n<li>只能访问this.props和this.state,只能有一个顶层组件</li>\n<li>也可以返回 null 或者 false，这时候 ReactDOM.findDOMNode(this) 会返回 null</li>\n<li>shouldComponentUpdate() 返回false时不会调用render()</li>\n<li>不允许修改状态和DOM输出</li>\n</ul>\n<h4 id=\"componentDidMount\"><a href=\"#componentDidMount\" class=\"headerlink\" title=\"componentDidMount()\"></a>componentDidMount()</h4><p>render之后调用，可以通过 ReactDOM.findDOMNode(this) 获取到组件的 DOM 节点。如果需要从后端获取数据渲染页面可以在这里操作，setState将会触发render重新渲染。</p>\n<h3 id=\"更新组件触发\"><a href=\"#更新组件触发\" class=\"headerlink\" title=\"更新组件触发\"></a>更新组件触发</h3><p>更新props或者state都会更新组件</p>\n<h4 id=\"componentWillReceiveProps\"><a href=\"#componentWillReceiveProps\" class=\"headerlink\" title=\"componentWillReceiveProps\"></a>componentWillReceiveProps</h4><pre><code>componentWillReceiveProps(nextProps)\n</code></pre><p>接收到新的props将触发此方法<br>可以通过比较<code>this.props</code>和<code>nextProps</code>来</p>\n<h4 id=\"shouldComponentUpdate\"><a href=\"#shouldComponentUpdate\" class=\"headerlink\" title=\"shouldComponentUpdate\"></a>shouldComponentUpdate</h4><pre><code>shouldComponentUpdate(nextProps, nextState)\n</code></pre><p>默认返回ture，返回false的时候，而后的componentWillUpdate(),render(),和 componentDidUpdate()将不会被调用<br>不过根据react官网，未来返回false可能仍然使得组件重渲。<br>目前在项目中用到的不多。</p>\n<h4 id=\"componentWillUpdate\"><a href=\"#componentWillUpdate\" class=\"headerlink\" title=\"componentWillUpdate\"></a>componentWillUpdate</h4><pre><code>componentWillUpdate(nextProps, nextState)\n</code></pre><p>当接收到新的props和state，<code>componentWillUpdate</code>将在<code>render</code>之前被立即调用</p>\n<blockquote>\n<p>不能在这调用this.setState()，若你需要更新状态响应属性的调整，使用<code>componentWillReceiveProps()</code>代替。</p>\n</blockquote>\n<h4 id=\"componentDidUpdate\"><a href=\"#componentDidUpdate\" class=\"headerlink\" title=\"componentDidUpdate\"></a>componentDidUpdate</h4><p><code>componentDidUpdate</code>会在更新发生后立即被调用<br>当组件被更新时，使用该方法是操作DOM的一次机会。这也是一个适合发送请求的地方，要是你对比了当前属性和之前属性</p>\n<h3 id=\"卸载组件触发\"><a href=\"#卸载组件触发\" class=\"headerlink\" title=\"卸载组件触发\"></a>卸载组件触发</h3><h4 id=\"componentWillUnmount\"><a href=\"#componentWillUnmount\" class=\"headerlink\" title=\"componentWillUnmount\"></a>componentWillUnmount</h4><p><code>componentWillUnmount</code>在组件被卸载和销毁之前立刻调用</p>\n<h3 id=\"综上\"><a href=\"#综上\" class=\"headerlink\" title=\"综上\"></a>综上</h3><h4 id=\"生命周期函数\"><a href=\"#生命周期函数\" class=\"headerlink\" title=\"生命周期函数\"></a>生命周期函数</h4><p>装载组件触发</p>\n<blockquote>\n<p>constructor()<br>componentWillMount()<br>render()<br>componentDidMount()</p>\n</blockquote>\n<p>更新组件触发</p>\n<blockquote>\n<p>componentWillReceiveProps()<br>shouldComponentUpdate()<br>componentWillUpdate()<br>render()<br>componentDidUpdate()</p>\n</blockquote>\n<p>卸载组件触发</p>\n<blockquote>\n<p>componentWillUnmount()</p>\n</blockquote>\n<h3 id=\"类属性\"><a href=\"#类属性\" class=\"headerlink\" title=\"类属性\"></a>类属性</h3><h4 id=\"defaultProps\"><a href=\"#defaultProps\" class=\"headerlink\" title=\"defaultProps\"></a>defaultProps</h4><p>用来设置默认属性</p>\n<p><strong>非使用ES6语法</strong><br><a href=\"https://facebook.github.io/react/docs/react-without-es6.html\" target=\"_blank\" rel=\"noopener\">https://facebook.github.io/react/docs/react-without-es6.html</a><br>不打算使用 ES6，你也可以使用<code>create-react-class</code>模块来创建</p>\n<pre><code>var createReactClass = require(&apos;create-react-class&apos;);\nvar Greeting = createReactClass({\n  render: function() {\n    return &lt;h1&gt;Hello, {this.props.name}&lt;/h1&gt;;\n  }\n});\n</code></pre><p>如果使用 <code>createReactClass</code> 方法创建组件，那就需要在参数对象中定义 <code>getDefaultProps</code> 方法，并且在这个方法中返回包含自定义属性的对象,定义<code>getInitialState</code> 方法，并让这个方法返回你要定义的初始属性</p>"},{"title":"gulp的使用","_content":"gulp，自动化的构建工具增加工作流程。gulp.js是基于Node.js构建的，利用Node.js流的威力，快速构建项目并减少频繁的io操作。\n<!-- more --> \n### gulp.src(globs[,options)\n 输出符合所提供的匹配模式或者匹配模式数组的文件。\n  {% codeblock %}\n     gulp.src([ ‘./src/js/**/*.js',\n      ‘!./src/js/templates', \n      ‘!./src/js/?(build|examples|server|src-test|resources)/**/**',\n      ‘!./src/{component,component/**}' ])\n {% endcodeblock %}\n忽略文件夹：`‘!./src/{component,component/**}’` 可以忽略掉component文件夹和component文件夹里面的东西。（也可以写成‘!./src/component{,/\\*\\*}’）\n>‘!./src/component/**’只能忽略掉component文件夹里面的东西，不能忽略掉文件夹本身。\n\nGulp内部使用了node-glob模块来实现其文件匹配功能,用到的glob的匹配规则以及一些文件匹配技巧如下。\n- \\* 匹配文件路径中的0个或多个字符，但不会匹配路径分隔符，除非路径分隔符出现在末尾\n- \\** 匹配路径中的0个或多个目录及其子目录,需要单独出现，即它左右不能有其他东西了。如果出现在末尾，也能匹配文件。\n- ? 匹配文件路径中的一个字符(不会匹配路径分隔符)\n- [...] 匹配方括号中出现的字符中的任意一个，当方括号中第一个字符为^或!时，则表示不匹配方括号中出现的其他字符中的任意一个，类似js正则表达式中的用法\n- !(pattern|pattern|pattern) 匹配任何与括号中给定的任一模式都不匹配的\n- ?(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或1次，类似于js正则中的(pattern|pattern|pattern)?\n- +(pattern|pattern|pattern) 匹配括号中给定的任一模式至少1次，类似于js正则中的(pattern|pattern|pattern)+\n- *(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或多次，类似于js正则中的(pattern|pattern|pattern)*\n- @(pattern|pattern|pattern) 匹配括号中给定的任一模式1次，类似于js正则中的(pattern|pattern|pattern)\n\n下面以一系列例子来加深理解\n\n- \\* 能匹配 a.js,x.y,abc,abc/,但不能匹配a/b.js\n- \\*\\.\\* 能匹配 a.js,style.css,a.b,x.y\n- \\*/\\*/\\*.js 能匹配 a/b/c.js,x/y/z.js,不能匹配a/b.js,a/b/c/d.js\n- ** 能匹配 abc,a/b.js,a/b/c.js,x/y/z,x/y/z/a.b,能用来匹配所有的目录和文件\n- **/*.js 能匹配 foo.js,a/foo.js,a/b/foo.js,a/b/c/foo.js\n- a/**/z 能匹配 a/z,a/b/z,a/b/c/z,a/d/g/h/j/k/z\n- a/\\*\\*b/z 能匹配 a/b/z,a/sb/z,但不能匹配a/x/sb/z,因为只有单**单独出现才能匹配多级目录\n- ?.js 能匹配 a.js,b.js,c.js\n- a?? 能匹配 a.b,abc,但不能匹配ab/,因为它不会匹配路径分隔符\n- [xyz].js 只能匹配 x.js,y.js,z.js,不会匹配xy.js,xyz.js等,整个中括号只代表一个字符\n- [^xyz].js 能匹配 a.js,b.js,c.js等,不能匹配x.js,y.js,z.js\n\n[参考资料](http://www.cnblogs.com/2050/p/4198792.html)\n### gulp.dest(path[, options])\n 写入文件, 作为pipe的一个流程.文件夹不存在时会被自动创建.\n### gulp.task(name[, deps], fn)\n 定义一个任务,声明它的名称, 任务依赖, 和任务内容.\n gulp中的任务是异步运行的，gulp便默认将并行所有的任务。\n {% codeblock %}\n gulp.task('release', ['clean', 'minify'], function(){\n    // do stuff\n \n });\n {% endcodeblock %}\n \n 如果希望任务T2在T1之后运行，那么：\n \n 1 在 T1 中返回 Promise、Stream 类型的值，或者接受一个 callback 回调函数作为参数\n 2 在 T2 的声明中定义 T1 为其依赖\n {% codeblock %}\n gulp.task('clean', function(){\n     return gulp.src(\"./dist/**/*.js\", { read: false }).pipe(rimraf());\n });\n \n gulp.task('minify', ['clean'], function(){\n     return  gulp.src('./js/**/*.js').pipe(uglify()).pipe(gulp.dest(\"./dist/js\"));\n });\n gulp.task('release', ['clean', 'minify'], function(){\n    // do stuff\n \n });\n {% endcodeblock %}\n \n 弊端：\n \n minify 任务现在依赖了 clean 任务，而它的业务原本是不依赖 clean 的——我们只是为了“屈从 Gulp 的设计”才定义了这样的依赖关系。这种在 minify 中隐式包含 clean 的做法有时候会带来麻烦。比如，你在执行的时候，确实只是需要执行一个 minify，怎么办？那时，你就需要定义一个专门的 minify-only\n 那么，怎样才能“优雅地”逐个同步地运行 Gulp 任务呢？\n  **run-sequence可以按顺序地运行多个或多组任务；**\n  {% codeblock %}\n  var runSequence = require('run-sequence');\n  gulp.task('default', function(callback) {\n      runSequence('clean',\n          ['less', 'scripts'],\n          'watch',\n          callback);\n  });\n  {% endcodeblock %}\n  在上述代码中，clean 先于所有其他任务运行，在 clean 完成后，less 与 scripts 同时运行；在 less 与 scripts 都运行完成之后，watch 最后运行。并且，在 watch 运行完毕后，会调用 callback，以通知 Gulp 引擎。\n  [参考链接](https://blog.jijiechen.com/post/run-gulp-tasks-and-steps-synchronously)\n  ###gulp.watch(glob [, opts], tasks)\n  监控文件,执行任务.\n  \n>  常用插件集合\n\n  压缩图片\n  https://www.npmjs.com/package/gulp-imagemin\n  自动生成文件版本\n  https://github.com/sindresorhus/gulp-rev\n  使用gulp压缩js\n  https://github.com/nimojs/gulp-book/blob/master/chapter2.md\n   ","source":"_posts/gulp的使用.md","raw":"---\ntitle:  \"gulp的使用\"\ntag: gulp\n---\ngulp，自动化的构建工具增加工作流程。gulp.js是基于Node.js构建的，利用Node.js流的威力，快速构建项目并减少频繁的io操作。\n<!-- more --> \n### gulp.src(globs[,options)\n 输出符合所提供的匹配模式或者匹配模式数组的文件。\n  {% codeblock %}\n     gulp.src([ ‘./src/js/**/*.js',\n      ‘!./src/js/templates', \n      ‘!./src/js/?(build|examples|server|src-test|resources)/**/**',\n      ‘!./src/{component,component/**}' ])\n {% endcodeblock %}\n忽略文件夹：`‘!./src/{component,component/**}’` 可以忽略掉component文件夹和component文件夹里面的东西。（也可以写成‘!./src/component{,/\\*\\*}’）\n>‘!./src/component/**’只能忽略掉component文件夹里面的东西，不能忽略掉文件夹本身。\n\nGulp内部使用了node-glob模块来实现其文件匹配功能,用到的glob的匹配规则以及一些文件匹配技巧如下。\n- \\* 匹配文件路径中的0个或多个字符，但不会匹配路径分隔符，除非路径分隔符出现在末尾\n- \\** 匹配路径中的0个或多个目录及其子目录,需要单独出现，即它左右不能有其他东西了。如果出现在末尾，也能匹配文件。\n- ? 匹配文件路径中的一个字符(不会匹配路径分隔符)\n- [...] 匹配方括号中出现的字符中的任意一个，当方括号中第一个字符为^或!时，则表示不匹配方括号中出现的其他字符中的任意一个，类似js正则表达式中的用法\n- !(pattern|pattern|pattern) 匹配任何与括号中给定的任一模式都不匹配的\n- ?(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或1次，类似于js正则中的(pattern|pattern|pattern)?\n- +(pattern|pattern|pattern) 匹配括号中给定的任一模式至少1次，类似于js正则中的(pattern|pattern|pattern)+\n- *(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或多次，类似于js正则中的(pattern|pattern|pattern)*\n- @(pattern|pattern|pattern) 匹配括号中给定的任一模式1次，类似于js正则中的(pattern|pattern|pattern)\n\n下面以一系列例子来加深理解\n\n- \\* 能匹配 a.js,x.y,abc,abc/,但不能匹配a/b.js\n- \\*\\.\\* 能匹配 a.js,style.css,a.b,x.y\n- \\*/\\*/\\*.js 能匹配 a/b/c.js,x/y/z.js,不能匹配a/b.js,a/b/c/d.js\n- ** 能匹配 abc,a/b.js,a/b/c.js,x/y/z,x/y/z/a.b,能用来匹配所有的目录和文件\n- **/*.js 能匹配 foo.js,a/foo.js,a/b/foo.js,a/b/c/foo.js\n- a/**/z 能匹配 a/z,a/b/z,a/b/c/z,a/d/g/h/j/k/z\n- a/\\*\\*b/z 能匹配 a/b/z,a/sb/z,但不能匹配a/x/sb/z,因为只有单**单独出现才能匹配多级目录\n- ?.js 能匹配 a.js,b.js,c.js\n- a?? 能匹配 a.b,abc,但不能匹配ab/,因为它不会匹配路径分隔符\n- [xyz].js 只能匹配 x.js,y.js,z.js,不会匹配xy.js,xyz.js等,整个中括号只代表一个字符\n- [^xyz].js 能匹配 a.js,b.js,c.js等,不能匹配x.js,y.js,z.js\n\n[参考资料](http://www.cnblogs.com/2050/p/4198792.html)\n### gulp.dest(path[, options])\n 写入文件, 作为pipe的一个流程.文件夹不存在时会被自动创建.\n### gulp.task(name[, deps], fn)\n 定义一个任务,声明它的名称, 任务依赖, 和任务内容.\n gulp中的任务是异步运行的，gulp便默认将并行所有的任务。\n {% codeblock %}\n gulp.task('release', ['clean', 'minify'], function(){\n    // do stuff\n \n });\n {% endcodeblock %}\n \n 如果希望任务T2在T1之后运行，那么：\n \n 1 在 T1 中返回 Promise、Stream 类型的值，或者接受一个 callback 回调函数作为参数\n 2 在 T2 的声明中定义 T1 为其依赖\n {% codeblock %}\n gulp.task('clean', function(){\n     return gulp.src(\"./dist/**/*.js\", { read: false }).pipe(rimraf());\n });\n \n gulp.task('minify', ['clean'], function(){\n     return  gulp.src('./js/**/*.js').pipe(uglify()).pipe(gulp.dest(\"./dist/js\"));\n });\n gulp.task('release', ['clean', 'minify'], function(){\n    // do stuff\n \n });\n {% endcodeblock %}\n \n 弊端：\n \n minify 任务现在依赖了 clean 任务，而它的业务原本是不依赖 clean 的——我们只是为了“屈从 Gulp 的设计”才定义了这样的依赖关系。这种在 minify 中隐式包含 clean 的做法有时候会带来麻烦。比如，你在执行的时候，确实只是需要执行一个 minify，怎么办？那时，你就需要定义一个专门的 minify-only\n 那么，怎样才能“优雅地”逐个同步地运行 Gulp 任务呢？\n  **run-sequence可以按顺序地运行多个或多组任务；**\n  {% codeblock %}\n  var runSequence = require('run-sequence');\n  gulp.task('default', function(callback) {\n      runSequence('clean',\n          ['less', 'scripts'],\n          'watch',\n          callback);\n  });\n  {% endcodeblock %}\n  在上述代码中，clean 先于所有其他任务运行，在 clean 完成后，less 与 scripts 同时运行；在 less 与 scripts 都运行完成之后，watch 最后运行。并且，在 watch 运行完毕后，会调用 callback，以通知 Gulp 引擎。\n  [参考链接](https://blog.jijiechen.com/post/run-gulp-tasks-and-steps-synchronously)\n  ###gulp.watch(glob [, opts], tasks)\n  监控文件,执行任务.\n  \n>  常用插件集合\n\n  压缩图片\n  https://www.npmjs.com/package/gulp-imagemin\n  自动生成文件版本\n  https://github.com/sindresorhus/gulp-rev\n  使用gulp压缩js\n  https://github.com/nimojs/gulp-book/blob/master/chapter2.md\n   ","slug":"gulp的使用","published":1,"date":"2018-10-29T09:35:13.291Z","updated":"2018-10-29T09:35:13.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnu6bxww000agz1fd6yx7w4e","content":"<p>gulp，自动化的构建工具增加工作流程。gulp.js是基于Node.js构建的，利用Node.js流的威力，快速构建项目并减少频繁的io操作。<br><a id=\"more\"></a> </p>\n<h3 id=\"gulp-src-globs-options\"><a href=\"#gulp-src-globs-options\" class=\"headerlink\" title=\"gulp.src(globs[,options)\"></a>gulp.src(globs[,options)</h3><p> 输出符合所提供的匹配模式或者匹配模式数组的文件。<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.src([ ‘./src/js/**/*.js&apos;,</span><br><span class=\"line\"> ‘!./src/js/templates&apos;, </span><br><span class=\"line\"> ‘!./src/js/?(build|examples|server|src-test|resources)/**/**&apos;,</span><br><span class=\"line\"> ‘!./src/&#123;component,component/**&#125;&apos; ])</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure><br>忽略文件夹：<code>‘!./src/{component,component/**}’</code> 可以忽略掉component文件夹和component文件夹里面的东西。（也可以写成‘!./src/component{,/**}’）</p>\n<blockquote>\n<p>‘!./src/component/**’只能忽略掉component文件夹里面的东西，不能忽略掉文件夹本身。</p>\n</blockquote>\n<p>Gulp内部使用了node-glob模块来实现其文件匹配功能,用到的glob的匹配规则以及一些文件匹配技巧如下。</p>\n<ul>\n<li>* 匹配文件路径中的0个或多个字符，但不会匹配路径分隔符，除非路径分隔符出现在末尾</li>\n<li>** 匹配路径中的0个或多个目录及其子目录,需要单独出现，即它左右不能有其他东西了。如果出现在末尾，也能匹配文件。</li>\n<li>? 匹配文件路径中的一个字符(不会匹配路径分隔符)</li>\n<li>[…] 匹配方括号中出现的字符中的任意一个，当方括号中第一个字符为^或!时，则表示不匹配方括号中出现的其他字符中的任意一个，类似js正则表达式中的用法</li>\n<li>!(pattern|pattern|pattern) 匹配任何与括号中给定的任一模式都不匹配的</li>\n<li>?(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或1次，类似于js正则中的(pattern|pattern|pattern)?</li>\n<li>+(pattern|pattern|pattern) 匹配括号中给定的任一模式至少1次，类似于js正则中的(pattern|pattern|pattern)+</li>\n<li><em>(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或多次，类似于js正则中的(pattern|pattern|pattern)</em></li>\n<li>@(pattern|pattern|pattern) 匹配括号中给定的任一模式1次，类似于js正则中的(pattern|pattern|pattern)</li>\n</ul>\n<p>下面以一系列例子来加深理解</p>\n<ul>\n<li>* 能匹配 a.js,x.y,abc,abc/,但不能匹配a/b.js</li>\n<li>*.* 能匹配 a.js,style.css,a.b,x.y</li>\n<li>*/*/*.js 能匹配 a/b/c.js,x/y/z.js,不能匹配a/b.js,a/b/c/d.js</li>\n<li>** 能匹配 abc,a/b.js,a/b/c.js,x/y/z,x/y/z/a.b,能用来匹配所有的目录和文件</li>\n<li>*<em>/</em>.js 能匹配 foo.js,a/foo.js,a/b/foo.js,a/b/c/foo.js</li>\n<li>a/**/z 能匹配 a/z,a/b/z,a/b/c/z,a/d/g/h/j/k/z</li>\n<li>a/**b/z 能匹配 a/b/z,a/sb/z,但不能匹配a/x/sb/z,因为只有单**单独出现才能匹配多级目录</li>\n<li>?.js 能匹配 a.js,b.js,c.js</li>\n<li>a?? 能匹配 a.b,abc,但不能匹配ab/,因为它不会匹配路径分隔符</li>\n<li>[xyz].js 只能匹配 x.js,y.js,z.js,不会匹配xy.js,xyz.js等,整个中括号只代表一个字符</li>\n<li>[^xyz].js 能匹配 a.js,b.js,c.js等,不能匹配x.js,y.js,z.js</li>\n</ul>\n<p><a href=\"http://www.cnblogs.com/2050/p/4198792.html\" target=\"_blank\" rel=\"noopener\">参考资料</a></p>\n<h3 id=\"gulp-dest-path-options\"><a href=\"#gulp-dest-path-options\" class=\"headerlink\" title=\"gulp.dest(path[, options])\"></a>gulp.dest(path[, options])</h3><p> 写入文件, 作为pipe的一个流程.文件夹不存在时会被自动创建.</p>\n<h3 id=\"gulp-task-name-deps-fn\"><a href=\"#gulp-task-name-deps-fn\" class=\"headerlink\" title=\"gulp.task(name[, deps], fn)\"></a>gulp.task(name[, deps], fn)</h3><p> 定义一个任务,声明它的名称, 任务依赖, 和任务内容.<br> gulp中的任务是异步运行的，gulp便默认将并行所有的任务。<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(&apos;release&apos;, [&apos;clean&apos;, &apos;minify&apos;], function()&#123;</span><br><span class=\"line\">   // do stuff</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p> 如果希望任务T2在T1之后运行，那么：</p>\n<p> 1 在 T1 中返回 Promise、Stream 类型的值，或者接受一个 callback 回调函数作为参数<br> 2 在 T2 的声明中定义 T1 为其依赖<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(&apos;clean&apos;, function()&#123;</span><br><span class=\"line\">    return gulp.src(&quot;./dist/**/*.js&quot;, &#123; read: false &#125;).pipe(rimraf());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(&apos;minify&apos;, [&apos;clean&apos;], function()&#123;</span><br><span class=\"line\">    return  gulp.src(&apos;./js/**/*.js&apos;).pipe(uglify()).pipe(gulp.dest(&quot;./dist/js&quot;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">gulp.task(&apos;release&apos;, [&apos;clean&apos;, &apos;minify&apos;], function()&#123;</span><br><span class=\"line\">   // do stuff</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p> 弊端：</p>\n<p> minify 任务现在依赖了 clean 任务，而它的业务原本是不依赖 clean 的——我们只是为了“屈从 Gulp 的设计”才定义了这样的依赖关系。这种在 minify 中隐式包含 clean 的做法有时候会带来麻烦。比如，你在执行的时候，确实只是需要执行一个 minify，怎么办？那时，你就需要定义一个专门的 minify-only<br> 那么，怎样才能“优雅地”逐个同步地运行 Gulp 任务呢？<br>  <strong>run-sequence可以按顺序地运行多个或多组任务；</strong><br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var runSequence = require(&apos;run-sequence&apos;);</span><br><span class=\"line\">gulp.task(&apos;default&apos;, function(callback) &#123;</span><br><span class=\"line\">    runSequence(&apos;clean&apos;,</span><br><span class=\"line\">        [&apos;less&apos;, &apos;scripts&apos;],</span><br><span class=\"line\">        &apos;watch&apos;,</span><br><span class=\"line\">        callback);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><br>  在上述代码中，clean 先于所有其他任务运行，在 clean 完成后，less 与 scripts 同时运行；在 less 与 scripts 都运行完成之后，watch 最后运行。并且，在 watch 运行完毕后，会调用 callback，以通知 Gulp 引擎。<br>  <a href=\"https://blog.jijiechen.com/post/run-gulp-tasks-and-steps-synchronously\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<p>  ###gulp.watch(glob [, opts], tasks)<br>  监控文件,执行任务.</p>\n<blockquote>\n<p> 常用插件集合</p>\n</blockquote>\n<p>  压缩图片<br>  <a href=\"https://www.npmjs.com/package/gulp-imagemin\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/gulp-imagemin</a><br>  自动生成文件版本<br>  <a href=\"https://github.com/sindresorhus/gulp-rev\" target=\"_blank\" rel=\"noopener\">https://github.com/sindresorhus/gulp-rev</a><br>  使用gulp压缩js<br>  <a href=\"https://github.com/nimojs/gulp-book/blob/master/chapter2.md\" target=\"_blank\" rel=\"noopener\">https://github.com/nimojs/gulp-book/blob/master/chapter2.md</a></p>\n","site":{"data":{}},"excerpt":"<p>gulp，自动化的构建工具增加工作流程。gulp.js是基于Node.js构建的，利用Node.js流的威力，快速构建项目并减少频繁的io操作。<br>","more":"</p>\n<h3 id=\"gulp-src-globs-options\"><a href=\"#gulp-src-globs-options\" class=\"headerlink\" title=\"gulp.src(globs[,options)\"></a>gulp.src(globs[,options)</h3><p> 输出符合所提供的匹配模式或者匹配模式数组的文件。<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.src([ ‘./src/js/**/*.js&apos;,</span><br><span class=\"line\"> ‘!./src/js/templates&apos;, </span><br><span class=\"line\"> ‘!./src/js/?(build|examples|server|src-test|resources)/**/**&apos;,</span><br><span class=\"line\"> ‘!./src/&#123;component,component/**&#125;&apos; ])</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure><br>忽略文件夹：<code>‘!./src/{component,component/**}’</code> 可以忽略掉component文件夹和component文件夹里面的东西。（也可以写成‘!./src/component{,/**}’）</p>\n<blockquote>\n<p>‘!./src/component/**’只能忽略掉component文件夹里面的东西，不能忽略掉文件夹本身。</p>\n</blockquote>\n<p>Gulp内部使用了node-glob模块来实现其文件匹配功能,用到的glob的匹配规则以及一些文件匹配技巧如下。</p>\n<ul>\n<li>* 匹配文件路径中的0个或多个字符，但不会匹配路径分隔符，除非路径分隔符出现在末尾</li>\n<li>** 匹配路径中的0个或多个目录及其子目录,需要单独出现，即它左右不能有其他东西了。如果出现在末尾，也能匹配文件。</li>\n<li>? 匹配文件路径中的一个字符(不会匹配路径分隔符)</li>\n<li>[…] 匹配方括号中出现的字符中的任意一个，当方括号中第一个字符为^或!时，则表示不匹配方括号中出现的其他字符中的任意一个，类似js正则表达式中的用法</li>\n<li>!(pattern|pattern|pattern) 匹配任何与括号中给定的任一模式都不匹配的</li>\n<li>?(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或1次，类似于js正则中的(pattern|pattern|pattern)?</li>\n<li>+(pattern|pattern|pattern) 匹配括号中给定的任一模式至少1次，类似于js正则中的(pattern|pattern|pattern)+</li>\n<li><em>(pattern|pattern|pattern) 匹配括号中给定的任一模式0次或多次，类似于js正则中的(pattern|pattern|pattern)</em></li>\n<li>@(pattern|pattern|pattern) 匹配括号中给定的任一模式1次，类似于js正则中的(pattern|pattern|pattern)</li>\n</ul>\n<p>下面以一系列例子来加深理解</p>\n<ul>\n<li>* 能匹配 a.js,x.y,abc,abc/,但不能匹配a/b.js</li>\n<li>*.* 能匹配 a.js,style.css,a.b,x.y</li>\n<li>*/*/*.js 能匹配 a/b/c.js,x/y/z.js,不能匹配a/b.js,a/b/c/d.js</li>\n<li>** 能匹配 abc,a/b.js,a/b/c.js,x/y/z,x/y/z/a.b,能用来匹配所有的目录和文件</li>\n<li>*<em>/</em>.js 能匹配 foo.js,a/foo.js,a/b/foo.js,a/b/c/foo.js</li>\n<li>a/**/z 能匹配 a/z,a/b/z,a/b/c/z,a/d/g/h/j/k/z</li>\n<li>a/**b/z 能匹配 a/b/z,a/sb/z,但不能匹配a/x/sb/z,因为只有单**单独出现才能匹配多级目录</li>\n<li>?.js 能匹配 a.js,b.js,c.js</li>\n<li>a?? 能匹配 a.b,abc,但不能匹配ab/,因为它不会匹配路径分隔符</li>\n<li>[xyz].js 只能匹配 x.js,y.js,z.js,不会匹配xy.js,xyz.js等,整个中括号只代表一个字符</li>\n<li>[^xyz].js 能匹配 a.js,b.js,c.js等,不能匹配x.js,y.js,z.js</li>\n</ul>\n<p><a href=\"http://www.cnblogs.com/2050/p/4198792.html\" target=\"_blank\" rel=\"noopener\">参考资料</a></p>\n<h3 id=\"gulp-dest-path-options\"><a href=\"#gulp-dest-path-options\" class=\"headerlink\" title=\"gulp.dest(path[, options])\"></a>gulp.dest(path[, options])</h3><p> 写入文件, 作为pipe的一个流程.文件夹不存在时会被自动创建.</p>\n<h3 id=\"gulp-task-name-deps-fn\"><a href=\"#gulp-task-name-deps-fn\" class=\"headerlink\" title=\"gulp.task(name[, deps], fn)\"></a>gulp.task(name[, deps], fn)</h3><p> 定义一个任务,声明它的名称, 任务依赖, 和任务内容.<br> gulp中的任务是异步运行的，gulp便默认将并行所有的任务。<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(&apos;release&apos;, [&apos;clean&apos;, &apos;minify&apos;], function()&#123;</span><br><span class=\"line\">   // do stuff</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p> 如果希望任务T2在T1之后运行，那么：</p>\n<p> 1 在 T1 中返回 Promise、Stream 类型的值，或者接受一个 callback 回调函数作为参数<br> 2 在 T2 的声明中定义 T1 为其依赖<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(&apos;clean&apos;, function()&#123;</span><br><span class=\"line\">    return gulp.src(&quot;./dist/**/*.js&quot;, &#123; read: false &#125;).pipe(rimraf());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(&apos;minify&apos;, [&apos;clean&apos;], function()&#123;</span><br><span class=\"line\">    return  gulp.src(&apos;./js/**/*.js&apos;).pipe(uglify()).pipe(gulp.dest(&quot;./dist/js&quot;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">gulp.task(&apos;release&apos;, [&apos;clean&apos;, &apos;minify&apos;], function()&#123;</span><br><span class=\"line\">   // do stuff</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p> 弊端：</p>\n<p> minify 任务现在依赖了 clean 任务，而它的业务原本是不依赖 clean 的——我们只是为了“屈从 Gulp 的设计”才定义了这样的依赖关系。这种在 minify 中隐式包含 clean 的做法有时候会带来麻烦。比如，你在执行的时候，确实只是需要执行一个 minify，怎么办？那时，你就需要定义一个专门的 minify-only<br> 那么，怎样才能“优雅地”逐个同步地运行 Gulp 任务呢？<br>  <strong>run-sequence可以按顺序地运行多个或多组任务；</strong><br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var runSequence = require(&apos;run-sequence&apos;);</span><br><span class=\"line\">gulp.task(&apos;default&apos;, function(callback) &#123;</span><br><span class=\"line\">    runSequence(&apos;clean&apos;,</span><br><span class=\"line\">        [&apos;less&apos;, &apos;scripts&apos;],</span><br><span class=\"line\">        &apos;watch&apos;,</span><br><span class=\"line\">        callback);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><br>  在上述代码中，clean 先于所有其他任务运行，在 clean 完成后，less 与 scripts 同时运行；在 less 与 scripts 都运行完成之后，watch 最后运行。并且，在 watch 运行完毕后，会调用 callback，以通知 Gulp 引擎。<br>  <a href=\"https://blog.jijiechen.com/post/run-gulp-tasks-and-steps-synchronously\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<p>  ###gulp.watch(glob [, opts], tasks)<br>  监控文件,执行任务.</p>\n<blockquote>\n<p> 常用插件集合</p>\n</blockquote>\n<p>  压缩图片<br>  <a href=\"https://www.npmjs.com/package/gulp-imagemin\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/package/gulp-imagemin</a><br>  自动生成文件版本<br>  <a href=\"https://github.com/sindresorhus/gulp-rev\" target=\"_blank\" rel=\"noopener\">https://github.com/sindresorhus/gulp-rev</a><br>  使用gulp压缩js<br>  <a href=\"https://github.com/nimojs/gulp-book/blob/master/chapter2.md\" target=\"_blank\" rel=\"noopener\">https://github.com/nimojs/gulp-book/blob/master/chapter2.md</a></p>"},{"title":"全面解析JavaScript中“&&”和“||”操作符","date":"2017-03-06T06:42:36.000Z","_content":"逻辑 \"||\"\n1、只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。\n2、只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。\n<!-- more --> \n知道了前面第一个的结果就知道最后的输出，如果为第一个为：true，则取第一个的值，如果第一个为false，则取第二个的值。\n\n>在js逻辑运算中，0、”“、null、false、undefined、NaN都会判为false，其他都为true\n\n逻辑 “&&”\n1、只要“&&”前面是false，无论“&&”后面是true还是false，结果都将返“&&”前面的值;\n2、只要“&&”前面是true，无论“&&”后面是true还是false，结果都将返“&&”后面的值;\ntypeof cb == \"function\" && cb(that.globalData.userInfo)\n当前面为true的时候，执行后面\n\na() && b() :如果执行a()后返回true，则执行b()并返回b的值；如果执行a()后返回false，则整个表达式返回a()的值，b()不执行；\n\na() || b() :如果执行a()后返回true，则整个表达式返回a()的值，b()不执行；如果执行a()后返回false，则执行b()并返回b()的值；\n&& 优先级高于 ||","source":"_posts/全面解析JavaScript中&&和||.md","raw":"---\ntitle: 全面解析JavaScript中“&&”和“||”操作符\ndate: 2017-03-06 14:42:36\ntags: JavaScript\n---\n逻辑 \"||\"\n1、只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。\n2、只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。\n<!-- more --> \n知道了前面第一个的结果就知道最后的输出，如果为第一个为：true，则取第一个的值，如果第一个为false，则取第二个的值。\n\n>在js逻辑运算中，0、”“、null、false、undefined、NaN都会判为false，其他都为true\n\n逻辑 “&&”\n1、只要“&&”前面是false，无论“&&”后面是true还是false，结果都将返“&&”前面的值;\n2、只要“&&”前面是true，无论“&&”后面是true还是false，结果都将返“&&”后面的值;\ntypeof cb == \"function\" && cb(that.globalData.userInfo)\n当前面为true的时候，执行后面\n\na() && b() :如果执行a()后返回true，则执行b()并返回b的值；如果执行a()后返回false，则整个表达式返回a()的值，b()不执行；\n\na() || b() :如果执行a()后返回true，则整个表达式返回a()的值，b()不执行；如果执行a()后返回false，则执行b()并返回b()的值；\n&& 优先级高于 ||","slug":"全面解析JavaScript中&&和||","published":1,"updated":"2018-10-29T09:35:13.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnu6bxwy000cgz1fbrgx2s63","content":"<p>逻辑 “||”<br>1、只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。<br>2、只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。<br><a id=\"more\"></a><br>知道了前面第一个的结果就知道最后的输出，如果为第一个为：true，则取第一个的值，如果第一个为false，则取第二个的值。</p>\n<blockquote>\n<p>在js逻辑运算中，0、”“、null、false、undefined、NaN都会判为false，其他都为true</p>\n</blockquote>\n<p>逻辑 “&amp;&amp;”<br>1、只要“&amp;&amp;”前面是false，无论“&amp;&amp;”后面是true还是false，结果都将返“&amp;&amp;”前面的值;<br>2、只要“&amp;&amp;”前面是true，无论“&amp;&amp;”后面是true还是false，结果都将返“&amp;&amp;”后面的值;<br>typeof cb == “function” &amp;&amp; cb(that.globalData.userInfo)<br>当前面为true的时候，执行后面</p>\n<p>a() &amp;&amp; b() :如果执行a()后返回true，则执行b()并返回b的值；如果执行a()后返回false，则整个表达式返回a()的值，b()不执行；</p>\n<p>a() || b() :如果执行a()后返回true，则整个表达式返回a()的值，b()不执行；如果执行a()后返回false，则执行b()并返回b()的值；<br>&amp;&amp; 优先级高于 ||</p>\n","site":{"data":{}},"excerpt":"<p>逻辑 “||”<br>1、只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。<br>2、只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。<br>","more":"<br>知道了前面第一个的结果就知道最后的输出，如果为第一个为：true，则取第一个的值，如果第一个为false，则取第二个的值。</p>\n<blockquote>\n<p>在js逻辑运算中，0、”“、null、false、undefined、NaN都会判为false，其他都为true</p>\n</blockquote>\n<p>逻辑 “&amp;&amp;”<br>1、只要“&amp;&amp;”前面是false，无论“&amp;&amp;”后面是true还是false，结果都将返“&amp;&amp;”前面的值;<br>2、只要“&amp;&amp;”前面是true，无论“&amp;&amp;”后面是true还是false，结果都将返“&amp;&amp;”后面的值;<br>typeof cb == “function” &amp;&amp; cb(that.globalData.userInfo)<br>当前面为true的时候，执行后面</p>\n<p>a() &amp;&amp; b() :如果执行a()后返回true，则执行b()并返回b的值；如果执行a()后返回false，则整个表达式返回a()的值，b()不执行；</p>\n<p>a() || b() :如果执行a()后返回true，则整个表达式返回a()的值，b()不执行；如果执行a()后返回false，则执行b()并返回b()的值；<br>&amp;&amp; 优先级高于 ||</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjnu6bxwj0000gz1ft4h8mjtq","tag_id":"cjnu6bxwp0002gz1f0ms5fj1s","_id":"cjnu6bxwt0005gz1fkre4wrab"},{"post_id":"cjnu6bxwn0001gz1fw3o80yy3","tag_id":"cjnu6bxws0004gz1fhwmy2tvm","_id":"cjnu6bxwt0006gz1f0ev1cl1n"},{"post_id":"cjnu6bxwt0007gz1fc6j22r8f","tag_id":"cjnu6bxwv0008gz1fv7cupk9f","_id":"cjnu6bxwv0009gz1f22lbhod4"},{"post_id":"cjnu6bxww000agz1fd6yx7w4e","tag_id":"cjnu6bxwz000dgz1fb43ujyvc","_id":"cjnu6bxx0000fgz1fp7kpbzv9"},{"post_id":"cjnu6bxwy000cgz1fbrgx2s63","tag_id":"cjnu6bxwz000egz1f5mql0pj8","_id":"cjnu6bxx0000ggz1f6qu6iutq"}],"Tag":[{"name":"Mac","_id":"cjnu6bxwp0002gz1f0ms5fj1s"},{"name":"Linux","_id":"cjnu6bxws0004gz1fhwmy2tvm"},{"name":"React","_id":"cjnu6bxwv0008gz1fv7cupk9f"},{"name":"gulp","_id":"cjnu6bxwz000dgz1fb43ujyvc"},{"name":"JavaScript","_id":"cjnu6bxwz000egz1f5mql0pj8"},{"name":"test","_id":"cjnu7iy050001h91fro3i2ars"}]}}